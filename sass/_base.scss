/*	=UTILS AND BASE CONFIGURATION
----------------------------------------------------------------------*/


// Config

$legacy-support-for-ie6: 		false;
$legacy-support-for-ie7: 		false;
$experimental-support-for-svg: 	true;


// Colors


$accent: 		darken(#298FE3, 10%);		// Blue
$comp: 			lighten(yellow, 30%);		// Dark blue
$highlight: 	#E32980;					// For callouts, for example

$bodycolor:		#222;


// Typography


$serif: 		Georgia, "Times New Roman", serif;
$sans: 			"Helvetica Neue", Helvetica, Arial, sans-serif;
$monospaced: 	Monaco, "Courier New", Courier, monospace;


$fontsize:		15px;

$lineheight: 	24px;


// Layout

$page_width: 	992px;

$gutter:		16px; 

$column:		68px;


// Imports

@import "library/normalize";
@import "compass/css3";
@import "library/hashgrid";


// Custom mixins

@mixin debugmessage($message, $color: yellow){
	&::before{
		content: $message;
		font-weight: bold;
		display: block;
		text-align: center;
		background: #{$color};
		position: absolute;
		@include stretch($height: false);
		z-index: 999;
		top: 0;
	}
}


@mixin stretch($height: true, $width: true){
	position: absolute;
	@if($height == true){
		top: 0;
		bottom: 0;
	}
	@if($width == true){
		right: 0;
		left: 0;
	}
}


// A regular clearfix which can be applied directly in the CSS (no need for nasty HTML classes): "@include clearfix" on parent element.
@mixin clearfix{
	&:after{
		visibility: hidden;
     	display: block;
	    font-size: 0;
     	content: " ";
     	clear: both;
     	height: 0;	
	}
	& {display: inline-block;}
	* html & {height: 1%;}
	& {display: block;}
}


// Functions

// Really nifty function for responsive designing. Just use it like: 'width: make_fluid(308px)', and it'll return a percentage
// based on the width of the container.

@function make_fluid($number, $total: $page_width){
	@return ($number / $total)*100%;
}

// Returns correctly formatted number of columns (based on the $column variable).
// Example usage: 'width: make_fluid(get_columns(3))'

@function get_columns($number){
	@return ( ($column*$number) + ($gutter*($number - 1)) );
}



// Animations


/*	=GLOBAL ANIMATIONS
----------------------------------------------------------------------*/

/* Reseting animation */
@-webkit-keyframes reset {
	0% 			{ opacity: 0;}
	100% 		{ opacity: 0;}
}




/*- ELEMENT SETUP
----------------------------------------------------------------------*/

img {
	max-width: 100%;
	height: auto;
	
	&.noscale{
		max-width: none;
	}
}

/* Make links 'clickable' */
a{
	position: relative;
}

a:active, a:focus{
	outline: none;
	top: 1px;
}

/* Make table headings align left */
th{
	text-align: left;
}


/* Emphasize the kbd element */
kbd{
	font-family: $sans;
	font-weight: bolder;
}

del{
	color: #666;
}


h1, h2, h3, h4, h5, h6{
	/* Fixes kerning. Watch out for some performance issues. */
	text-rendering: optimizeLegibility;	
	margin: 0;
	padding: 0;
	font-size: 1em;
	
	a{
		font-weight: inherit;
	}
}

p{
	margin: 0;
	padding: 0;
}

pre{
	overflow: auto;
}

pre, code{
	font-family: $monospaced;
	/* Code doesn't look that good antialiased */
	-webkit-font-smoothing: subpixel-antialiased;
}




/*- GLOBAL HELPER CLASSES
----------------------------------------------------------------------*/

/* Nicer ampersand */
.amp{
	font-family: Baskerville, Palatino, "Palatino Linotype", "Book Antiqua", serif;
	font-size: 1.4em;
	font-style: italic;
	font-weight: normal;
}

/* Quick floating */
.alignleft{
	float: left;
}
.alignright{
	float: right;
}
.aligncenter{
	margin-left: auto;
	margin-right: auto;
}

.center{
	text-align: center;
}
.left{
	text-align: left;
}
.right{
	text-align: right;
}


/* List styles */

ul.bulleted{
	list-style-type: disc;
}
ul.squared{
	list-style-type: square;
}

ol.outside,
ul.outside{
	list-style-position: outside;
	padding-left: 0;
}


/*- NON-SEMANTIC HELPER CLASSES
----------------------------------------------------------------------*/


/* Clearing stuff */
.clear{
	clear: both; 
	display: block; 
	height: 1px; 
	margin: -1px 0 0 0;
}


/* Clearfix hack */

.group{
	@include clearfix;
}

/* Hide for both screenreaders and browsers
   css-discuss.incutio.com/wiki/Screenreader_Visibility */
.hidden {
	display: none; 
}

/* Hide only visually, but have it available for screenreaders */
.visuallyhidden { 
	position: absolute;   
	left: -999em;
}
 
/* Hide visually and from screenreaders, but maintain layout */
.invisible {
	visibility: hidden; 
}